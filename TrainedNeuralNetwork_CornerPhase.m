function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 02-Apr-2020 15:50:31.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx8 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [0.523599;1.047;1.047;18.4664016242;0.00562510889315;0.0118724643453;1;1];
x1_step1_gain = [1.90985302726029;1.52788388082506;1.52788388082506;0.145963885867409;80.5634074446721;51.8747579083087;0.222222222222222;0.222222222222222];
x1_step1_ymin = -1;

% Layer 1
b1 = [-4.4226653868229819366;2.6124645146973337617;-3.9539209536182795546;-0.83018423200687918584;0.013564438763942941735;0.39937518187416681803;3.5082328738611043839];
IW1_1 = [0.25782559200191035309 -0.5654024265228025925 0.15460554950815019737 -3.3746994050280751942 1.8481165512502595316 0.67352191103155711893 0.62391333389187408898 0.029762501229740102177;-0.41707999124076988728 -3.8950824209631007555 -0.67587035107749060536 -1.5012579069272242727 0.04735669911819346406 -0.28326387005431630239 1.8657734006052726361 -0.994853410744528599;5.9550331788428758628 -0.098719539020292360054 0.064486547277806158252 5.2149332281931499722 0.73942929140785840225 0.22937163069230298573 -1.5556318295883311276 0.035788647451799146526;1.3189765856352675399 0.0035575309943844468999 0.00036436293509300342807 0.32725468892615483529 0.54187275013772639998 -0.27314501180431988159 -0.16856922045355451911 0.0097353059238848554252;0.77924283982341291388 0.0057356208951148393224 -0.00034445037224885332108 -0.71563831023647739293 0.65220840079897501873 -0.20348217202611584842 -0.1846585437337703306 -0.054155643661955354951;0.93564138482484049408 0.00014195489587676265661 -0.0045135144370379966586 -0.60509912341550875503 0.67566106235571066208 -0.30627354990652888578 -0.23920387245191659931 -0.093365539550887943765;-0.3077171141087620132 0.0017944253611406196791 0.032692312953309467238 -0.62207254538493639284 -1.2131853171006898862 0.12655771446516150824 0.61500199132729338469 1.1026312407782059566];

% Layer 2
b2 = 1.8766224182157000833;
LW2_1 = [-1.1767197178549431147 0.0079485553444050716793 1.0970059094710036263 -1.5969522240404554481 3.0149044123063095668 -1.2053538316701220001 -2.8209978657613259401];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.601433289908375;
y1_step1_xoffset = 0.0315038965425213;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
